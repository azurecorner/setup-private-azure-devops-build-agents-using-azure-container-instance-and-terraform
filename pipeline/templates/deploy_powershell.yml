
parameters:
- name: serviceConnectionName
- name: resourceGroupName 
- name: resourceGroupLocation
- name: storageAccountName
- name: workspace
- name: stageName

stages:
- stage: deploy_to_${{ parameters.stageName }}_environment 
  displayName: deploy  to ${{ parameters.stageName }} environment
  jobs:
  - deployment: DeployScript
    displayName: deploy 
    pool:
      vmImage: ubuntu-latest
    # creates an environment if it doesn't exist
    environment: ${{ parameters.workspace }}
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self
          - task: AzurePowerShell@5
            displayName: Deploy Resource Group
            inputs:
                azureSubscription: '${{  parameters.serviceConnectionName }}'
                ScriptType: 'FilePath'
                ScriptPath: 'powershell/resourceGroup.ps1'
                ScriptArguments: '-resourceGroupName "${{ parameters.resourceGroupName }}" -resourceGroupLocation "${{ parameters.resourceGroupLocation }}"'
                azurePowerShellVersion: 'LatestVersion'
                workingDirectory: '$(System.DefaultWorkingDirectory)'
          - task: AzurePowerShell@5
            displayName: Deploy Backend Storage Account
            inputs:
                azureSubscription: '${{  parameters.serviceConnectionName }}'
                ScriptType: 'FilePath'
                ScriptPath: 'powershell/storageAccount.ps1'
                ScriptArguments: '-resourceGroupName "${{ parameters.resourceGroupName }}" -resourceGroupLocation "${{ parameters.resourceGroupLocation }}" -storageAccountName "${{ parameters.storageAccountName }}"'
                azurePowerShellVersion: 'LatestVersion'
                workingDirectory: '$(System.DefaultWorkingDirectory)'
      